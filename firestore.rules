rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow preflight requests
    match /{document=**} {
      allow read, write: if request.method == 'OPTIONS';
    }
    
    // Main rules
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.token.admin == true || 
        request.auth.token.email.matches('.*@dpspaharpur.com$') ||
        request.auth.token.email in [
          'sahin401099@gmail.com',
          'admin@dpspaharpur.com',
          'dinapublicschool.paharpur@gmail.com'
        ]
      );
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Public content
    match /documents/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Config like redirect links
    match /config/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Uploaded documents metadata (PDFs)
    match /documents/{docId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Media (photos/videos) metadata
    match /media/{docId} {
      allow read: if true;
    }

    // School information (public read, admin write)
    match /school/{document=**} {
      allow read: if true;
    }

    // Admission applications
    match /admissionApplications/{applicationId} {
      // Allow users to create their own applications
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can read and update their own applications
      allow read, update: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      
      // Admins can read all applications
      allow read: if isAdmin();
      
      // Only admins can delete applications
      allow delete: if isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own data
      allow read: if isOwner(userId);
      // Users can create/update their own data
      allow write: if isAuthenticated() && 
                   request.auth.uid == userId;
    }

    // Applications collection
    match /applications/{applicationId} {
      // Allow users to create their own applications
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Allow users to read their own applications
      allow read: if isAuthenticated() && 
                 (resource.data.userId == request.auth.uid || isAdmin());
      
      // Allow querying by applicationNumber
      allow list: if isAuthenticated() && 
                 (request.query.limit <= 10) &&
                 (request.query.where['applicationNumber'][1] == request.auth.uid || 
                  resource.data.userId == request.auth.uid || 
                  isAdmin());
      
      // Allow users to update their own applications if not locked
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid &&
                   (!resource.data.locked || isAdmin());
      
      // Only admins can delete applications
      allow delete: if isAdmin();
    }

    // Admission test results
    match /admissionTests/{testId} {
      allow read: if isAdmin();
      allow create, update: if isAdmin();
    }
    
    // Allow public read access to school info
    match /school/{document=**} {
      allow read: if true;  // Public read access
      allow write: if isAdmin();
    }
    
    // Applications collection
    match /applications/{applicationId} {
      // Allow authenticated users to create applications
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Allow users to read their own applications
      allow read: if isAuthenticated() && 
                 (resource.data.userId == request.auth.uid || isAdmin());
      
      // Allow updates to application status by admin
      allow update: if (
        // User can update their own application
        (isAuthenticated() && resource.data.userId == request.auth.uid) ||
        // Admin can update any application
        isAdmin()
      );
      
      // Only admins can delete applications
      allow delete: if isAdmin();
    }
    
    // Notices collection
    match /notices/{noticeId} {
      allow read: if true;  // Public read access
      allow create, update, delete: if isAdmin();
    }
    
    // Admission test results
    match /admissionTests/{testId} {
      allow read: if isAdmin();
      allow create, update: if isAdmin();
    }
    
    // Contact form messages
    match /messages/{messageId} {
      // Allow read for admins
      allow read: if isAdmin();
      
      // Allow public message submission with validation
      allow create: if (
        // Public can create messages
        true &&
        
        // Required fields validation
        request.resource.data.name is string &&
        request.resource.data.name.size() > 0 &&
        request.resource.data.name.size() < 100 &&
        
        request.resource.data.email is string &&
        request.resource.data.email.matches('^[^@]+@[^@]+\\.[^@]+$') &&
        
        request.resource.data.message is string &&
        request.resource.data.message.size() > 0 &&
        request.resource.data.message.size() < 2000 &&
        
        // Optional phone field
        (!request.resource.data.phone || 
         (request.resource.data.phone is string && 
          request.resource.data.phone.size() < 20)) &&
          
        // System fields
        request.resource.data.status == 'unread' &&
        request.resource.data.createdAt is timestamp &&
        request.resource.data.updatedAt is timestamp
      );
      
      // Only admins can update/delete messages
      allow update, delete: if isAdmin();
      
      // Subcollections
      match /{document=**} {
        allow read: if isAdmin();
        allow write: if isAdmin();
      }
    }

    // Notices collection
    match /notices/{noticeId} {
      // Allow public read access
      allow read: if true;
      
      // Only admins can create/update/delete notices
      allow create: if isAdmin() && 
        request.resource.data.keys().hasAll(['title', 'content', 'isActive']) &&
        request.resource.data.title is string &&
        request.resource.data.title.size() > 0 &&
        request.resource.data.content is string &&
        request.resource.data.isActive is bool;
        
      allow update: if isAdmin() && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'content', 'isActive', 'updatedAt']) &&
        request.resource.data.title is string &&
        request.resource.data.title.size() > 0 &&
        request.resource.data.content is string &&
        request.resource.data.isActive is bool;
        
      allow delete: if isAdmin();
      
      // Automatically set timestamps
      match /{document=**} {
        allow read: if true;
        allow write: if false; // No direct writes to subcollections
      }
    }

    // Users collection
    match /users/{userId} {
      // Allow read if user is authenticated and requesting their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow create if user is creating their own document
      allow create: if request.auth != null && 
                    request.auth.uid == userId && 
                    request.resource.data.uid == userId;
      
      // Allow update if user is updating their own document
      allow update: if request.auth != null && 
                    request.auth.uid == userId && 
                    request.resource.data.uid == userId;
      
      // Subcollections - same rules as parent
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Admins collection
    match /admins/{uid} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if isAdmin();
    }
    
    // Notices collection
    match /notices/{noticeId} {
      // Allow public read
      allow read: if true;
      
      // Only allow create, update, delete for admins
      allow create: if isAdmin() && 
                   request.resource.data.title != null &&
                   request.resource.data.content != null &&
                   request.resource.data.createdAt != null;
                   
      allow update: if isAdmin() &&
                   request.resource.data.title != null &&
                   request.resource.data.content != null &&
                   request.resource.data.updatedAt != null;
                   
      allow delete: if isAdmin();
    }
    
    // Admission Applications
    match /admissionApplications/{applicationId} {
      // Allow authenticated users to create applications with their own userId
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Allow read if user is admin or the owner of the application
      allow read: if isAuthenticated() && 
                 (isAdmin() || 
                  resource.data.userId == request.auth.uid);
      
      // Allow update if user is admin or the owner of a pending application
      allow update: if isAuthenticated() && 
                   (isAdmin() || 
                   (resource.data.userId == request.auth.uid && 
                    resource.data.status == 'pending'));
      
      // Only admins can delete applications
      allow delete: if isAdmin();
      
      // Subcollections inherit parent permissions
      match /{document=**} {
        allow read, write: if isAdmin() || 
                          (isAuthenticated() && resource.data.userId == request.auth.uid);
      }
    }
  }
}
